name: Deploying the Nodejs App using ECS Fargate Cluster

on:
  push:
    branches:
      - main

env:  
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} 
  IMAGE_TAG: ${{ github.sha }}

jobs:
  docker-build-ecr-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1 

      - name: Build image and push to ECR 
        id: build-image
        run: |
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Fill the new image ID in AWS ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with: 
          task-definition: ecs/task-definition.json
          container-name: nodejsapp-container
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy ECS task definition
        id: deploy
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with: 
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: nodejsapp-service
          cluster: nodejsapp-cluster
          wait-for-service-stability: true
